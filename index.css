:root {
    --btn-opacity: 0.5;
    --base-value: calc(clamp(100vw, 1px, 100vh) / 50);
    /* min font size has to be 18px. Let's base other items on it. */
    --btn-font: clamp(18px, var(--base-value), var(--base-value));
    --btn-height: calc(var(--btn-font) * 2);
    --btn-width: calc(var(--btn-font) * 3);
    --btn-gap: calc(var(--btn-font) / 4);
    --app-width: calc((var(--btn-width) * 5 + var(--btn-gap) * 3) * 2);
}

html,
body {
    margin: 0;
    padding: 0;
    border: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

body {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #212121;
    background-color: #f1f1f1;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-size: var(--btn-font);
}

.c-app {
    width: var(--app-width);
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, var(--btn-height)) 1fr;
    gap: var(--btn-gap);
}

.c-header {
    grid-column: 1/3;
}

.c-input {
    grid-column: 1/1;
    outline: 0;
    font-size: inherit;
    padding: .5em;
    margin: 0;
    border: 0;
    background-color: #fff;
    box-sizing: border-box;
    width: 100%;
}

.c-input::placeholder {
    color: #ccc;
    font-size: .9em;
}

.c-output {
    grid-column: 1/1;
    grid-row: 3/5;
    font-size: .8em;
    color: #888;
    padding-top: var(--btn-gap);
}

.c-output.has-error {
    color: #882121;
}

.c-output.has-result {
    color: #218821;
}

.c-keyboard {
    grid-column: 2/3;
    grid-row: 2/5;
}

.c-keyboard {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--btn-gap) var(--btn-gap);
    flex: none;
}

.c-button {
    cursor: pointer;
    border: 0;
    font-size: inherit;
    height: var(--btn-height);
    width: var(--btn-width);
}

.c-button:active {
    --btn-opacity: 1;
}

.c-remove {
    background-color: rgba(255, 200, 200, var(--btn-opacity));
}

.c-number {
    background-color: rgba(200, 200, 200, var(--btn-opacity));
}

.c-operation {
    background-color: rgba(200, 220, 255, var(--btn-opacity));
}

.c-calculate {
    background-color: rgba(200, 255, 200, var(--btn-opacity));
}

@media screen and (orientation: portrait) {
    .c-app {
        display: block; 
        width: 96vw;
    }
    

    .c-output {
        height: 12vh;
    }

    :root {
        --btn-font: 7vw;
    }
}